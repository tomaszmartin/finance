---
- name: Provision | Create a disk
  gcp_compute_disk:
    name: "airflow-disk"
    size_gb: 10
    source_image: "projects/ubuntu-os-cloud/global/images/family/ubuntu-2004-lts"
    zone: "{{ gcp_zone }}"
    project: "{{ gcp_project }}"
    auth_kind: serviceaccount
    service_account_file: "{{ gcp_cred_file }}"
    scopes:
      - https://www.googleapis.com/auth/compute
    state: present
  register: disk

- name: Provision | Create an IP address
  gcp_compute_address:
    name: "address-instance"
    region: "{{ gcp_region }}"
    project: "{{ gcp_project }}"
    auth_kind: serviceaccount
    service_account_file: "{{ gcp_cred_file }}"
    scopes:
      - https://www.googleapis.com/auth/compute
    state: present
  register: address

- name: Provision | Create a firewall rule
  google.cloud.gcp_compute_firewall:
    name: "{{ gcp_tag_name }}"
    allowed:
      - ip_protocol: tcp
        ports:
          - "8080"
    target_tags:
      - "{{ gcp_tag_name }}"
    project: "{{ gcp_project }}"
    auth_kind: serviceaccount
    service_account_file: "{{ gcp_cred_file }}"
    state: present

- name: Provision | Get custom local ssh key
  command: "cat {{ ansible_ssh_public_key_file }}"
  register: ssh_key

- name: Provision | Create a Compute Engine instance
  gcp_compute_instance:
    state: present
    name: "{{ gcp_instance_name }}"
    machine_type: "{{ gcp_instance_type }}"
    disks:
      - auto_delete: true
        boot: true
        source: "{{ disk }}"
    network_interfaces:
      - network: null # use default
        access_configs:
          - name: "External NAT"
            nat_ip: "{{ address }}"
            type: "ONE_TO_ONE_NAT"
    zone: "{{ gcp_zone }}"
    project: "{{ gcp_project }}"
    auth_kind: serviceaccount
    service_account_file: "{{ gcp_cred_file }}"
    tags:
      items:
        - "{{ gcp_tag_name }}"
    metadata:
      ssh-keys: "{{ ansible_ssh_user }}:{{ ssh_key.stdout }}"
    scopes:
      - https://www.googleapis.com/auth/compute
  register: instance

- name: Provision | Wait for SSH to come up
  wait_for: host={{ address.address }} port=22 delay=10 timeout=60
