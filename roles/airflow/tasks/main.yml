---
- name: Airflow | Ensure Airflow group
  group:
    name: "{{ app_group }}"
  become: true

- name: Airflow | Ensure Airflow user
  user:
    name: "{{ app_user }}"
    group: "{{ app_group }}"
    system: true
    shell: /usr/sbin/nologin
    createhome: false
  become: true

- name: Airflow | Ensure airflow directories structure
  become: true
  become_method: sudo
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: 0775
  with_items:
    - /run/airflow
    - "{{ airflow_home }}"
    - "{{ airflow_home }}/logs"

- name: Airflow | Installing Airflow
  become: true
  become_user: "{{ app_user }}"
  pip:
    name: "apache-airflow"
    version: "{{ airflow_version }}"
    state: present
    virtualenv: "{{ app_venv }}"
    virtualenv_command: "python{{python_version}} -m venv"
    extra_args: --no-cache-dir
  register: airflow_install

- name: Airflow | Copy airflow config file
  become: true
  become_user: "{{ app_user }}"
  template:
    src: "airflow.cfg.j2"
    dest: "{{ airflow_home }}/airflow.cfg"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: 0660

- name: Airflow | Copy airflow run config
  become: true
  template:
    src: airflow.conf.j2
    dest: /usr/lib/tmpfiles.d/airflow.conf
    mode: 0644

- name: Airflow | Copy systemd unit files
  become: true
  become_method: sudo
  template:
    src: "{{ item }}.service.j2"
    dest: "/lib/systemd/system/{{ item }}.service"
    mode: 0644
  with_items:
    - airflow-webserver
    - airflow-scheduler

- name: Airflow | Copy certificate files
  become: true
  synchronize:
    src: "./secrets/{{ item }}"
    dest: "{{ app_home }}"
  with_items:
    - ssl.crt
    - ssl.key

- name: Airflow | Manage environment variables file
  become: true
  become_method: sudo
  template:
    src: airflow.profile.j2
    dest: "/etc/profile.d/airflow.sh"
    mode: 0644

- name: Airflow | Initializing DB
  command: "{{ airflow_executable }} db init"
  become: true
  become_user: "{{ app_user }}"
  environment:
    AIRFLOW_HOME: "{{ airflow_home }}"

- name: Airflow | Create Admin users
  become: true
  become_user: "{{ app_user }}"
  command:
    argv:
      - "{{ airflow_executable }}"
      - users
      - create
      - --username
      - "{{ airflow_admin }}"
      - --password
      - "{{ airflow_pass }}"
      - --firstname
      - ""
      - --lastname
      - ""
      - --role
      - "Admin"
      - --email
      - "{{ airflow_email }}"
  no_log: true
  environment:
    AIRFLOW_HOME: "{{ airflow_home }}"

- name: Airflow | Start services
  become: true
  become_method: sudo
  systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - airflow-webserver
    - airflow-scheduler
